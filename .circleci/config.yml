# Java Maven CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/openjdk:8-jdk
      - image: circleci/mysql:5.7.22
        environment:
          - MYSQL_ALLOW_EMPTY_PASSWORD: "true"
          - MYSQL_ROOT_HOST: "%"
        command:
          [
            --character-set-server=utf8,
            --collation-server=utf8_general_ci,
            --default-storage-engine=innodb,
          ]

    branches:
      only:
        - develop
        - master

    working_directory: ~/howling-wolf-api

    environment:
      # Customize the JVM maximum heap limit
      MAVEN_OPTS: -Xmx3200m

    steps:
      - checkout

      # DBが立ち上がるまで待つ
      - run:
          name: Wait for db
          command: dockerize -wait tcp://localhost:3306 -timeout 1m

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "pom.xml" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: mvn dependency:go-offline

      - save_cache:
          paths:
            - ~/.m2
          key: v1-dependencies-{{ checksum "pom.xml" }}

      # prepare database
      - run: export answer=y;sh dbflute_howlingwolfdb/manage.sh 0 > /dev/null

      # run tests!
      - run: mvn package # run the actual tests

      - run:
          name: Save test results
          command: |
            mkdir -p ~/test-results/junit/
            find . -type f -regex ".*/target/surefire-reports/.*xml" -exec cp {} ~/test-results/junit/ \;
          when: always

      - store_test_results:
          path: ~/test-results
      - store_artifacts:
          path: ~/test-results/junit

      - add_ssh_keys:
          fingerprints:
            - "${SSH_FINGERPRINTS}"

      - run:
          name: Start ssh-keyscan
          command: |
            ssh-keyscan -p ${SSH_PORT} ${SSH_IPADDRESS} >> ~/.ssh/known_hosts

      - deploy:
          name: Upload jar
          command: |
            if [ "${CIRCLE_BRANCH}" == "develop" ]; then
             scp -P ${SSH_PORT} ./target/howling-wolf-0.0.1-SNAPSHOT.jar ${SSH_USERNAME}@${SSH_IPADDRESS}:${SSH_APP_PATH}howling-wolf_dev.jar
            fi
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
             scp -P ${SSH_PORT} ./target/howling-wolf-0.0.1-SNAPSHOT.jar ${SSH_USERNAME}@${SSH_IPADDRESS}:${SSH_APP_PATH}howling-wolf.jar
            fi

      - run:
          name: Deploy
          command: |
            if [ "${CIRCLE_BRANCH}" == "develop" ]; then
             ssh -p ${SSH_PORT} ${SSH_USERNAME}@${SSH_IPADDRESS} "sudo sh deploy/deploy_howling_dev.sh"
            fi
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
             ssh -p ${SSH_PORT} ${SSH_USERNAME}@${SSH_IPADDRESS} "sudo sh deploy/deploy_howling.sh"
            fi
